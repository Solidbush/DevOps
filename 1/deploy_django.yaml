---
- name: Установка Docker
  hosts: all
  become: true

  tasks:
    - name: Установка зависимостей
      apt:
        name:
          - apt-transport-https
          - ca-certificates
          - curl
          - software-properties-common
        state: present
        update_cache: yes

    - name: Добавление официального GPG ключа Docker
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present

    - name: Добавление Docker репозитория
      apt_repository:
        repo: "deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable"
        state: present

    - name: Обновление кеша пакетов
      apt:
        update_cache: yes

    - name: Установка Docker
      apt:
        name: docker-ce
        state: present

    - name: Запуск Docker и добавление в автозагрузку
      systemd:
        name: docker
        enabled: true
        state: started

    - name: Добавление текущего пользователя в группу Docker
      user:
        name: "{{ ansible_user }}"
        groups: docker
        append: yes
      when: ansible_user != 'root'

    - name: Проверка версии Docker
      command: docker --version
      register: docker_version

    - name: Отображение установленной версии Docker
      debug:
        msg: "Установленная версия Docker: {{ docker_version.stdout }}"

- name: Установка и запуск Django приложения
  hosts: app
  become: true

  vars:
    project_dir: "/home/{{ ansible_ssh_user }}/django-locallibrary-tutorial"

  tasks:
    - name: Установка Git
      apt:
        name: git
        state: present
        update_cache: yes

    - name: Клонирование репозитория
      git:
        repo: https://github.com/mdn/django-locallibrary-tutorial.git
        dest: "{{ project_dir }}"
        version: main

    - name: Установка pip и виртуального окружения
      apt:
        name:
          - python3-pip
          - python3-venv
        state: present

    - name: Создание виртуального окружения
      command: python3 -m venv "{{ project_dir }}/venv"
      args:
        creates: "{{ project_dir }}/venv"

    - name: Установка корректной версии Django
      pip:
        name: "Django==4.2.5"
        virtualenv: "{{ project_dir }}/venv"

    - name: Установка зависимостей из requirements.txt
      pip:
        requirements: "{{ project_dir }}/requirements.txt"
        virtualenv: "{{ project_dir }}/venv"
        extra_args: "--no-deps"

    - name: Выполнение миграций
      command: "{{ project_dir }}/venv/bin/python3 manage.py migrate"
      args:
        chdir: "{{ project_dir }}"

    - name: Запуск сервера
      command: "{{ project_dir }}/venv/bin/python3 manage.py runserver 0.0.0.0:8000"
      args:
        chdir: "{{ project_dir }}"
      async: 3600
      poll: 0

    - name: Ожидание перед проверкой сервера
      pause:
        seconds: 10

    - name: Проверка, что приложение работает
      uri:
        url: http://192.168.56.201:8000
        return_content: yes
      register: app_response

    - name: Вывод содержимого главной страницы
      debug:
        var: app_response.content